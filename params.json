{
  "name": "Journey",
  "tagline": "",
  "body": "# Journey\r\n\r\nJourney is simple lib to manage your travel cards and get instructions for trip.\r\nTo learn more, please visit the <a>project page</a>\r\n\r\n# Input data format\r\n```javascript\r\n[\r\n  {\r\n      \"from\": \"A\",\r\n      \"to\": \"B\",\r\n      \"ticket\": {\r\n        \"type\": \"bus\",\r\n        \"number\": \"848F\",\r\n        \"spec\": \"\",\r\n        \"seat\": \"98J\"\r\n      }\r\n    },\r\n    {\r\n      \"from\": \"D\",\r\n      \"to\": \"B\",\r\n      \"ticket\": {\r\n        \"type\": \"airplane\",\r\n        \"number\": \"FZ83\",\r\n        \"spec\": \"\",\r\n        \"seat\": \"30C\",\r\n        \"gate\": 35,\r\n        \"baggage\": \"auto\"\r\n      }\r\n    }\r\n]\r\n```\r\n# Example\r\n\r\n```javascript\r\n    var journey = new Journey(inputData); // creating your journey\r\n\r\n    journey.printInstructions(\"#instructions\"); // instructions will be append to #instructions element\r\n    journey.printSimple(\"#simple\"); // simple print without types, only point. From A to B.\r\n\r\n    var instructions = journey.getInstructions(); // return array of instructions\r\n    // [\"Take bus 848F from A to B. Seat 98J.\",\r\n    //  \"From B, take flight UF22 to C. Gate 5. Seat undefi… be automatically transferred from your last leg.\",\r\n    //  \"Take bus 701C from C to D. Seat 36R.\",\r\n    //  \"From D, take flight FZ83 to B. Gate 35. Seat undef… be automatically transferred from your last leg.\",\r\n    //  \"From B, take flight YN11 to E. Gate 0. Seat undefi… be automatically transferred from your last leg.\"]\r\n\r\n    var simpleInstruction = journey.getSimple(); // return array of simple instructions if you just want to know route\r\n    // [\"From A to  B\", \"From B to  C\", \"From C to  D\", \"From D to  B\", \"From B to  E\"]\r\n\r\n    var types = journey.getTypes();// return [\"airplane\", \"train\"] - it is default types\r\n\r\n```\r\n\r\n# Add custom type example\r\n ```javascript\r\n    // add types before creating a Journey object\r\n    Journey.fn.addTicketType(\"bus\", function(card){\r\n        let ticket = {\r\n            number: card.ticket.number == \"\" ? \"\" : `${card.ticket.number} `,\r\n            spec: card.ticket.spec == \"\" ? \"\" : `the ${card.ticket.spec} `,\r\n            seat: card.ticket.seat == \"\" ? \"No seat assignment.\" : `Seat ${card.ticket.seat}.`\r\n        };\r\n        return `Take ${ticket.spec}bus ${ticket.number}from ${card.from} to ${card.to}. ${ticket.seat}`;\r\n    });\r\n\r\n    var journey = new Journey(inputData);\r\n    var types = journey.getTypes();// and now you can check that type was added, return [\"airplane\", \"train\", \"bus\"]\r\n\r\n    // now you can print it\r\n    journey.printInstructions(\"#instructions\");\r\n ```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}